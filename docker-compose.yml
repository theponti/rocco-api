services:  
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - rocco:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rocco
    networks:
      - rocco
    ports:
      - 5433:5432

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ default port
      - "15672:15672" # RabbitMQ Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  chroma:
    image: chromadb/chroma:latest
    container_name: chroma-server
    volumes:
      - rocco:/chroma/.chroma/index 
    ports:
      - "8000:8000" # Expose ChromaDB on port 8000 on the host
    environment:
      CHROMA_DB: postgres
      CHROMA_DB_HOST: postgres # The service name of the PostgreSQL container
      CHROMA_DB_PORT: 5432 # The port on which PostgreSQL runs inside the Docker network
      CHROMA_DB_USER: root
      CHROMA_DB_PASSWORD: password
      CHROMA_DB_DATABASE: main
    depends_on:
      - postgres

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - rocco:/data
    networks:
      - rocco
    ports:
      - 6379:6379

  api:
    container_name: rocco-api
    build: 
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
      - "9229:9229"
    environment:
      - NODE_ENV=development
      - PORT=3000
    env_file:
      - .env
    command: npm run dev
    networks:
      - rocco
    depends_on:
      - postgres
      - redis
      - chroma
      - rabbitmq

networks:
  rocco:
    driver: bridge

volumes:
  rocco:
  chroma-data: